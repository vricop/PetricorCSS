// @use "../config";
@use "sass:map";
@use "sass:meta";
@use "sass:list";

@mixin non-configurable($utility-variants, $screen) {
  @if $utility-variants == true or meta.type-of($utility-variants) == list {
    // DEFAULT
    @if $screen == null {
      @content(null, null);

      @if list.index($utility-variants, 'hover') {
        @content('hover\\:', ':hover');
      }

      @if list.index($utility-variants, 'hover-group') {
        @content('hover-group:hover .hover-target\\:', null);
        @content('hover-group:hover > .\\&hover-target\\:', null);
      }

      @if list.index($utility-variants, 'focus') {
        @content('focus\\:', ':focus');
      }
    }
    
    // RESPONSIVE
    @if list.index($utility-variants, 'responsive') and $screen != null {
      @content('#{$screen}\\:', null);

      @if list.index($utility-variants, 'hover') {
        @content('#{$screen}\\:hover\\:', ':hover');
      }

      @if list.index($utility-variants, 'hover-group') {
        @content('#{$screen}\\:hover-group:hover .hover-target\\:', null);
        @content('#{$screen}\\:hover-group:hover > .\\&hover-target\\:', null);
      }

      @if list.index($utility-variants, 'focus') {
        @content('#{$screen}\\:focus\\:', ':focus');
      }
    }
  }
}

@mixin configurable($utility-config, $utility-variants, $screen) {
  @if $utility-variants == true or meta.type-of($utility-variants) == list {
    @each $modifier, $value in $utility-config {
      @if $modifier == 'default' and $utility-variants != 'cursor' {
        $modifier: null;
      } @else {
        $modifier: '-#{$modifier}'
      }

      // DEFAULT
      @if $screen == null {
        @content(null, $modifier, null, $value);

        @if list.index($utility-variants, 'hover') {
          @content('hover\\:', $modifier, ':hover', $value);
        }

        @if list.index($utility-variants, 'hover-group') {
          @content('hover-group:hover .hover-target\\:', $modifier, null, $value);
          @content('hover-group:hover > .\\&hover-target\\:', $modifier, null, $value);
        }

        @if list.index($utility-variants, 'focus') {
          @content('focus\\:', $modifier, ':focus', $value);
        }

        @if list.index($utility-variants, 'first') {
          @content('first\\:', '#{$modifier}\\>\\* > *', ':first-child', $value);
        }
        
        @if list.index($utility-variants, 'last') {
          @content('last\\:', '#{$modifier}\\>\\* > *', ':last-child', $value);
        }
        
        @if list.index($utility-variants, 'even') {
          @content('even\\:', '#{$modifier}\\>\\* > *', ':nth-child(even)', $value);
        }
        
        @if list.index($utility-variants, 'odd') {
          @content('odd\\:', '#{$modifier}\\>\\* > *', ':nth-child(odd)', $value);
        }
      }
      
      // RESPONSIVE
      @if list.index($utility-variants, 'responsive') and $screen != null {
        @content('#{$screen}\\:', $modifier, null, $value);

        @if list.index($utility-variants, 'hover') {
          @content('#{$screen}\\:hover\\:', $modifier, ':hover', $value);
        }

        @if list.index($utility-variants, 'hover-group') {
          @content('#{$screen}\\:hover-group:hover .hover-target\\:', $modifier, null, $value);
          @content('#{$screen}\\:hover-group:hover > .\\&hover-target\\:', $modifier, null, $value);
        }

        @if list.index($utility-variants, 'focus') {
          @content('#{$screen}\\:focus\\:', $modifier, ':focus', $value);
        }
        
        @if list.index($utility-variants, 'first') {
          @content('#{$screen}\\:first\\:', '#{$modifier}\\>\\* > *', ':first-child', $value);
        }
        
        @if list.index($utility-variants, 'last') {
          @content('#{$screen}\\:last\\:', '#{$modifier}\\>\\* > *', ':last-child', $value);
        }
        
        @if list.index($utility-variants, 'even') {
          @content('#{$screen}\\:even\\:', '#{$modifier}\\>\\* > *', ':nth-child(even)', $value);
        }
        
        @if list.index($utility-variants, 'odd') {
          @content('#{$screen}\\:odd\\:', '#{$modifier}\\>\\* > *', ':nth-child(odd)', $value);
        }
      }
    }
  }
}
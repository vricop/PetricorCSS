@import '../utils/functions/is-valid-variant';

// Variants for padding classes
$_valid-padding-variants: ('responsive', 'hover', 'ems');
// Get variant options from paddings module
$_paddings-module: map-get($modules, 'paddings');

// Builds padding class variants with suffixes and prefixes passed as arguments.
@mixin _generate-padding-classes($suffix, $value, $prefix:null) {
  .#{$prefix}p-#{$suffix}  { padding: $value; }
  .#{$prefix}px-#{$suffix} { padding: { left: $value; right: $value; } } 
  .#{$prefix}py-#{$suffix} { padding: { top: $value; bottom: $value; } }
  .#{$prefix}pt-#{$suffix} { padding-top: $value; };
  .#{$prefix}pr-#{$suffix} { padding-right: $value; };
  .#{$prefix}pb-#{$suffix} { padding-bottom: $value; };
  .#{$prefix}pl-#{$suffix} { padding-left: $value; };
}

// Check which padding class variants are enabled in the config file. Then 
// generates all classes using '_generate-padding-classes'.
// Note: '$breakpoint' parameter is used for building responsive variants.
@mixin paddings($breakpoint:null)  {
  // Execute only if module is set to true or contains a list with valid variants
  // 1. Run if paddings modules is set to true or if variants are valid.
  // 2. If some variants arenâ€™t valid throw an error indicating wich variant caused it
  @if ($_paddings-module == true) or is-valid-variant($_paddings-module, $_valid-padding-variants) {
    @each $suffix, $value in $paddings {
      // # DEFAULT CLASSES
      // 1. If no breakpoints have been passed, generate default classes.
      @if $breakpoint == null {
        @include _generate-padding-classes($suffix, $value);
      }

      // # RESPONSIVE CLASSES
      // 1. Execute if reponsive variant is enabled and breakpoints have been passed.
      // 2. Generate responsive variants.
      @if index($_paddings-module, 'responsive') and ($breakpoint != null) {
        @include _generate-padding-classes($suffix, $value, '#{$breakpoint}\\:');
      }
      
      // # HOVER CLASSES
      // 1. Execute if hover variant is enabled and breakpoints haven't been passed.
      // 2. Generate hover variants.
      @if index($_paddings-module, 'hover') and ($breakpoint == null) {
        @include _generate-padding-classes('#{$suffix}:hover', $value, 'hover\\:');
      }
    }

    // # EM CLASSES
    // 1. Execute if em variant is enabled and breakpoints haven't been passed.
    // 2. Generate em variants.
    @if index($_paddings-module, 'ems') and ($breakpoint == null) {
      @each $suffix, $value in $em-paddings {
        @include _generate-padding-classes($suffix, $value, '\\*');
      }
    }
  }
}
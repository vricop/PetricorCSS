// @use "../config";
@use "sass:map";
@use "sass:meta";
@use "sass:list";
@use "sass:string";

@mixin build-configurable-variants($utility-config, $utility-variants, $screen) {
  @if $utility-variants == true or meta.type-of($utility-variants) == list {
    @each $modifier, $value in $utility-config {
      // There are some utilities that have a default value and have
      // no modifier (they only use the base-class, e.g. `border`, 
      // `border-radius`).
      // 
      // 1. If there's a modifier named `default` and it's not `cursor`
      //    utility, then set modifier to null (no modifier).
      // 2. For the rest of modifiers add a dash as a prefix.
      @if $modifier == 'default' and $value != 'default' {
        $modifier: null; // 1.
      } @else if string.index($modifier, '-') != 1 {
        $modifier: '-#{$modifier}' // 2.
      }

      // DEFAULT
      @if $screen == null {
        @content(null, $modifier, null, $value);

        @if list.index($utility-variants, 'hover') {
          @content('hover\\:', $modifier, ':hover', $value);
        }

        @if list.index($utility-variants, 'group-hover') {
          @content('group:hover .group-hover\\:', $modifier, null, $value);
        }
        
        @if list.index($utility-variants, '&group-hover') {
          @content('group:hover > .\\&group-hover\\:', $modifier, null, $value);
        }

        @if list.index($utility-variants, 'focus') {
          @content('focus\\:', $modifier, ':focus', $value);
        }
        
        @if list.index($utility-variants, 'visited') {
          @content('visited\\:', $modifier, ':visited', $value);
        }
        
        @if list.index($utility-variants, 'placeholder') {
          @content('placeholder\\:', $modifier, '::placeholder', $value);
        }

        @if list.index($utility-variants, 'first') {
          @content('first\\:', '#{$modifier} > *', ':first-child', $value);
        }
        
        @if list.index($utility-variants, 'last') {
          @content('last\\:', '#{$modifier} > *', ':last-child', $value);
        }
        
        @if list.index($utility-variants, 'even') {
          @content('even\\:', '#{$modifier} > *', ':nth-child(even)', $value);
        }
        
        @if list.index($utility-variants, 'odd') {
          @content('odd\\:', '#{$modifier} > *', ':nth-child(odd)', $value);
        }

        @if list.index($utility-variants, 'disabled') {
          @content('disabled\\:', $modifier, ':disabled', $value);
        }
 
        @if list.index($utility-variants, 'children') {
          @content('children\\:', $modifier, ' > *', $value);
        }
 
        @if list.index($utility-variants, 'empty') {
          @content('empty\\:', $modifier, ':empty', $value);
        }
      }
      
      // RESPONSIVE
      @if list.index($utility-variants, 'responsive') and $screen != null {
        @content('#{$screen}\\:', $modifier, null, $value);

        @if list.index($utility-variants, 'hover') {
          @content('#{$screen}\\:hover\\:', $modifier, ':hover', $value);
        }

        @if list.index($utility-variants, 'group-hover') {
          @content('#{$screen}\\:group:hover .group-hover\\:', $modifier, null, $value);
        }

        @if list.index($utility-variants, '&group-hover') {
          @content('#{$screen}\\:group:hover > .\\&group-hover\\:', $modifier, null, $value);
        }

        @if list.index($utility-variants, 'focus') {
          @content('#{$screen}\\:focus\\:', $modifier, ':focus', $value);
        }
        
        @if list.index($utility-variants, 'visited') {
          @content('#{$screen}\\:visited\\:', $modifier, ':visited', $value);
        }
        
        @if list.index($utility-variants, 'placeholder') {
          @content('#{$screen}\\:placeholder\\:', $modifier, '::placeholder', $value);
        }
        
        @if list.index($utility-variants, 'first') {
          @content('#{$screen}\\:first\\:', '#{$modifier} > *', ':first-child', $value);
        }
        
        @if list.index($utility-variants, 'last') {
          @content('#{$screen}\\:last\\:', '#{$modifier} > *', ':last-child', $value);
        }
        
        @if list.index($utility-variants, 'even') {
          @content('#{$screen}\\:even\\:', '#{$modifier} > *', ':nth-child(even)', $value);
        }
        
        @if list.index($utility-variants, 'odd') {
          @content('#{$screen}\\:odd\\:', '#{$modifier} > *', ':nth-child(odd)', $value);
        }

        @if list.index($utility-variants, 'disabled') {
          @content('#{$screen}\\:disabled\\:', $modifier, ':disabled', $value);
        }

        @if list.index($utility-variants, 'children') {
          @content('#{$screen}\\:children\\:', $modifier, ' > *', $value);
        }

        @if list.index($utility-variants, 'empty') {
          @content('#{$screen}\\:empty\\:', $modifier, ':empty', $value);
        }
      }
    }
  }
}

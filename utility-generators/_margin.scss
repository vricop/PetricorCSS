@use '../config' as *;
@use '../utils/build-configurable-variants' as *;
@use 'sass:map';

@mixin margin($screen: null) {
  $args: ($margin, map.get($variants, 'margin'), $screen);

  // Default margin variants
  @include build-configurable-variants($args...) using ($prefix, $modifier, $state, $value) {
    // If value is negative add `-` before margin utility base class.
    @if $value != 'auto' and $value < 0 {
      $prefix: '#{$prefix}-';
    }

    .#{$prefix}m#{$modifier}#{$state}  { margin: $value; }
    
    .#{$prefix}mx#{$modifier}#{$state} { 
      margin-left:  $value;
      margin-right: $value;
    };

    .#{$prefix}my#{$modifier}#{$state} { 
      margin-top:    $value;
      margin-bottom: $value;
    };

    .#{$prefix}mt#{$modifier}#{$state} { margin-top:    $value };
    .#{$prefix}mr#{$modifier}#{$state} { margin-right:  $value };
    .#{$prefix}mb#{$modifier}#{$state} { margin-bottom: $value };
    .#{$prefix}ml#{$modifier}#{$state} { margin-left:   $value };
  }

  $args-stack: ($margin-stack, map.get($variants, 'margin-stack'), $screen);

  // Default margin variants
  @include build-configurable-variants($args-stack...) using ($prefix, $modifier, $state, $value) {
    .#{$prefix}stack\:mt#{$modifier} > * + *  { margin-top:  $value; }
    .#{$prefix}stack\:ml#{$modifier} > * + *  { margin-left: $value; }
  }
}